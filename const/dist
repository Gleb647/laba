#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <locale.h>
#include <string>

using namespace std;

class motorbike {
	friend class holder;
	friend void get(motorbike & bike);
private:
	int id;
	string name;
	int mileage;


public:
	motorbike() : id(0), mileage(0), name(" ") {

	}
	motorbike(int id, int mileage, string name) {
		this->id = id;
		this->name = name;
		this->mileage = mileage;
	}
	~motorbike() {
	}

};

void get(motorbike & bike) {
	cout << bike.id << "---" << bike.name << "---" << bike.mileage << endl;
}

class holder{
public:
	holder() {

	}
	~holder() {

	}
	void set(motorbike & bike, int data) {
		bike.mileage = data;
	}
};

void main() {
	setlocale(LC_ALL, "Rus");
	int amount, ID, real_mileage, data;
	string real_name;
	motorbike* ptr;
	holder h;
	cout << "Введите количество объектов класса motorbike : ";
	cout << endl;
	cin >> amount;
	ptr = new motorbike[amount];
	for (int i = 0; i < amount; i++) {
		cout << "Введите идентификационный номер : ";
		cin >> ID;
		cout << endl;
		cout << "Введите имя владельца мотоцикла : ";
		cin >> real_name;
		cout << endl;
		cout << "Введите пробег мотоцикла : ";
		cin >> real_mileage;
		ptr[i] = { ID, real_mileage, real_name };
		cout << endl;
		cout <<  "======================================="  << endl;;
		cout << endl;
	}

	for (int i = 0; i < amount; i++) {
		get(ptr[i]);
	}
	cout << endl;
	for (int i = 0; i < amount; i++) {
		cout << "Введите сброшенный пробег "<< i+1 << " мотоцикла :";
		cin >> data;
		cout << endl;
		if (data > real_mileage) {
			cout << "недопустимое значение (значение для "<< i+1 <<" мотоцикла не будет изменено)" << endl;
		}
		else h.set(ptr[i],data);
	}
	cout << endl;
	for (int i = 0; i < amount; i++) {
		get(ptr[i]);
	}
  delete[] ptr;
}
